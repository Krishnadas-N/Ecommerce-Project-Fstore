<%- include('partials/Adminheader') %>

<style>
    .success {
        background-color: #4CAF50;
    }

    .error {
        background-color: #f44336;
    }

    /* CSS for the icon */
    .message-icon {
        display: inline-block;
        margin-right: 5px;
    }
</style>
<div class="page-wrapper">
<%- include('partials/Adminnav',{dashboard:false}) %>





<div class="main-container">
    <%- include('partials/adminPageHeader',{dashboard:false,searchFormAction:'/admin/users'}) %>
<div class="d-flex ms-4 me-4 justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
    <h3 class="h3 text-primary">User Management</h3>
    <div class="btn-toolbar mb-2 mb-md-0">
      
        
    </div>
</div>

                <!-- Modal Template -->
<!-- Creating tables -->
<div class="container-fluid">
   
    <nav aria-label="..." class="d-flex justify-content-end">
        <ul class="pagination ml-auto " id="pagination">
            <% if(page>1){ %>
          <li class="page-item" id="previousPage">
           <a href ="/admin/users?page=<%= currentPage-1 %>"> <span class="page-link" >Previous</span></a>
          </li>
          <% } %>
          <% for (let i = 1; i <= totalPages; i++) { %>
            <li class="page-item <%= currentPage === i ? 'active' : '' %>">
              <a class="page-link" href="/admin/users?page=<%= i %>"><%= i %></a>
            </li>
          <% } %>
          <!-- Pagination links will be added dynamically here -->
        <% if(page<totalPages){  %>
          <li class="page-item" id="nextPage">
            <a class="page-link" href="/admin/users?page=<%= currentPage+1 %>">Next</a>
          </li>
          <% } %>
        </ul>
      </nav> 
    <div class="table-responsive  mt-4">
        <table class="table table-striped table-bordered table-sm borrder-2 text-center">
            <thead>
                <tr>
                    <th scope="col">S.No</th>
                    <th scope="col">firstName</th>
                    <th scope="col">lastName</th>
                    <th scope="col">Email</th>
                    <!-- <th scope="col">Password</th> -->
                    <th scope="col">Gender</th>
                    <th scope="col">Phone Number</th>
                    <th scope="col" >Status</th>
                </tr>
            </thead>
            <tbody>
                <% users?.forEach((element,index) => { %>
                <tr class="align-middle">
                    <td><%= index+1 %></td>
                    <td><%= element.firstName %></td>
                    <td><%= element.lastName %></td>
                    <td><%= element.email %></td>
                    <td><%= element.gender %></td>
                    <td><%= element.mobile %></td>


                    


                    <td>
                        <!-- //action="users/block-user/<" -->
                        <form  id="blockUserForm"  >
                            <button type="submit" class="btn btn-<%= element.isBlocked ? 'danger' : 'success' %> btn-small" onclick="confirmBlockUser('<%= element._id %>')">
                                <%= element.isBlocked ? 'Unblock' : 'Block' %>
                                <i class="fa-solid fa-<%= element.isBlocked ? 'lock' : 'unlock' %>" style="color: <%= element.isBlocked ? '#d7dce5' : '#e9ecf1' %>; margin-left: 3px;"></i>
                            </button>
                        </form>
                    </td>
    
                    
                </tr>
                <% }) %>
            </tbody>
        </table>
    </div>
   <!-- Pagination HTML -->

 </div>

</div>

</div>


<script>

   


    //Block the USer
    function confirmBlockUser(userId) {
        event.preventDefault(); // Use event.preventDefault() to prevent the form from submitting
    
        Swal.fire({
            title: 'Confirm Block User',
            text: 'Are you sure you want to block/unblock this user?',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, block/unblock'
        }).then((result) => {
            if (result.isConfirmed) {
                // If user confirms, submit the form to block/unblock the user
                const form = document.getElementById('blockUserForm');
                fetch('users/block-user/' + userId, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json', // Set the appropriate content type
                    },
                    body: JSON.stringify({ userId }), // Send user ID as JSON data
                })
                    .then(response => {
                        if (response.ok) {
                            // Handle success, e.g., show a success message
                            Swal.fire('Blocked/Unblocked!', 'User has been blocked/unblocked.', 'success')
                                .then(() => {
                                    window.location.reload();
                                });
                        } else {
                            // Handle error, e.g., show an error message
                            Swal.fire('Error', 'An error occurred while blocking/unblocking the user.', 'error')
                                .then(() => {
                                    window.location.reload();
                                });
                        }
                    })
                    .catch(error => {
                        // Handle network or fetch error
                        Swal.fire('Error', 'An error occurred while blocking/unblocking the user.', 'error');
                    });
            }
        });
    }
    


    </script>
    
<%- include('partials/Adminfooter') %>